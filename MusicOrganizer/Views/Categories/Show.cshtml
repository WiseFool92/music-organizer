@{
  Layout = "_Layout";
}
@using MusicOrganizer.Models;
<h3>Here are all the artist/albums in this Genre:</h3>

<ol>
  @foreach (var music in @Model["music"])  // We loop through all Music in the model. We passed the view a Dictionary containing key-value pairs, so we access Music with @Model["music"] square bracket notation.
  {
    <li><a href='/categories/@Model["category"].Id/music/@music.Id'>@music.Description</a></li> // For each Music, we display its description in an <li> 
      
      // We've also made each <li> a link to the path '/categories/@Model["category"].Id/items/@item.Id'. This will be the music's detail view. We already have a Music detail page associated with the Show() route on the MusicController, but it's not at this super long path!

      // When the user clicks a Music from this list, they'll navigate to the Muisc's detail (show) page. Notice the path in this link is /categories/@Model["category"].Id/music/@music.Id, which follows RESTful standards depicted in the tables above.
  }
</ol>

<p><a href='/categories/@Model["category"].Id/music/new'>Add album/artist to genre</a></p>